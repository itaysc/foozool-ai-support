networks:
  foozool-net:
    driver: bridge

volumes:
  mongo-data:
  es-data:
  ml-pip-cache:
  ml-torch-cache:

services:
  app:
    build:
      context: .
      dockerfile: server/Dockerfile
    container_name: foozool-app
    working_dir: /usr/src/app/server
    volumes:
      - ./server:/usr/src/app/server
      - /usr/src/app/server/node_modules
      - ./common:/usr/src/app/common
    ports:
      - "3000:3000"
      - "9220:9220"
    env_file:
      - ./server/.env
    environment:
      - IS_DOCKER_DEV=true
    networks:
      - foozool-net
    depends_on:
      mongodb:
        condition: service_started
      redis:
        condition: service_started
      # elasticsearch:
      #   condition: service_healthy
  ml-service:
    build:
      context: .
      dockerfile: python-ml-service/Dockerfile
    container_name: foozool-ml-service
    working_dir: /app
    volumes:
      - ./python-ml-service:/app
      - ml-pip-cache:/root/.cache/pip  # Cache pip downloads
      - ml-torch-cache:/root/.cache/torch  # Cache torch models
    networks:
      - foozool-net
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app
    # Resource limits for better performance
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
  
  # frontend:
  #   build:
  #     context: .
  #     dockerfile: client/Dockerfile
  #   container_name: foozool-nginx-frontend
  #   ports:
  #     - "3001:3001"  # Changed for proper nginx routing
  #   networks:
  #     - foozool-net
  #   depends_on:
  #     - app

  mongodb:
    image: mongo:6
    container_name: foozool-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - foozool-net
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "2"
        tag: "mongodb"

  redis:
    image: redis:7
    container_name: foozool-redis
    ports:
      - "6380:6379"
    networks:
      - foozool-net
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "2"
        tag: "redis"

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.7.0
  #   container_name: foozool-elasticsearch
  #   environment:
  #     - discovery.type=single-node
  #     - xpack.security.enabled=false
  #     - ES_JAVA_OPTS=-XX:UseSVE=0
  #     - CLI_JAVA_OPTS=-XX:UseSVE=0
  #     - logger.org.elasticsearch=ERROR    # Only log errors
  #   ports:
  #     - "9200:9200"
  #     - "9300:9300"
  #   volumes:
  #     - es-data:/usr/share/elasticsearch/data
  #   networks:
  #     - foozool-net
  #   healthcheck:
  #     test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 5
  #     start_period: 60s
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "2"
  #       tag: "elasticsearch"

  nginx:
    image: nginx:alpine
    container_name: foozool-nginx-proxy
    ports:
      - "8080:80"  # Expose Nginx on 8080
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - foozool-net
    depends_on:
      # - frontend
      - app
