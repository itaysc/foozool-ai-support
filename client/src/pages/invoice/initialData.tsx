import { IInvoice } from "@common/types";
import { eInvoiceCategory, eInvoiceStatus } from "@common/types/invoice";
import { ePaymentTerms } from "@common/types/paymentTerms";

const getInitialInvoiceData = (): IInvoice => {
  return {
    invoiceNumber: '',
    amount: 0,
    customerId: '',
    invoiceDate: new Date(),
    paymentDate: new Date(),
    uploadPaymentDate: new Date(),
    dueDate: new Date(),
    archivedAt: undefined,
    invoicePeriods: [],
    region: undefined,
    taxCode: '',
    paymentReference: '',
    discountAmount: 0,
    taxAmount: 0,
    totalAmountWithTax: 0,
    currencyExchangeRate: undefined,
    originalCurrency: undefined,
    category: eInvoiceCategory.GOODS,
    purchaseOrderNumber: '',
    refundAmount: 0,
    relatedInvoices: [],
    isDisputed: false,
    disputeReason: undefined,
    reconciliationStatus: undefined,
    reconciliationConfidence: 0,
    reconciliationNotes: [],
    status: eInvoiceStatus.DRAFT,
    items: [],
    notes: [],
    description: '',
    approvalComments: [],
    paymentPlan: undefined,
    isOverdue: false,
    invoiceDiscrepancyNotes: [],
    relatedPurchaseOrders: [],
    auditTrail: [],
    modifiedBy: '',
    approvedBy: '',
    createdBy: {
      name: '',
      email: '',
    },
    customerNotes: [],
    externalSystemId: '',
    tags: [],
    assignmentHistory: [],
    assignee: {
      name: '',
      userId: undefined,
      role: '',
    },
    paymentTerms: ePaymentTerms.IMMEDIATE,
    latePaymentPenalty: 0,
    earlyPaymentDiscountPct: 0,
    invoiceVersion: 0,
    gap: 0,
    clientName: '',
    clientEmail: '',
    gapPct: 0,
    customerContact: {
      name: '',
      email: '',
      phone: '',
      role: '',
    },
    customFields: [],
  };
};
export default getInitialInvoiceData;